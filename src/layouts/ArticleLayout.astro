---
import { format } from "date-fns";

import "../styles/global.css";
import Layout from "./Layout.astro";
import ArticleFooter from "../components/ArticleFooter.astro";
import ArticleNav from "../components/ArticleNav.astro";
import Comments from "../components/Comments.astro";

interface Props {
  title: string;
  createdAt?: Date;
  modifiedAt?: Date;
  description?: string;
  navCurrent?: string;
  comments?: boolean;
  preamble?: string;
  tags?: string[];
  ogImage?: string;
}

const fmt = (d: Date) => format(d, "MMMM do, yyyy");

const {
  title,
  description,
  navCurrent = "/posts",
  comments = false,
  preamble,
  ogImage,
  createdAt: _createdAt,
  modifiedAt: _modifiedAt,
} = Astro.props;

const createdAt = _createdAt ? fmt(_createdAt) : null;
const modifiedAt = _modifiedAt ? fmt(_modifiedAt) : null;

// TODO: automate creation of this in CI.
const backlinkPath = Astro.url.pathname.replace("/posts", "");
const backlink = new URL(backlinkPath, "https://ovy.rs").href;
---

<Layout title={`${title} - Ovyerus`} ogTitle={title} {description} {ogImage}>
  {comments && <meta slot="head" name="giscus:backlink" content={backlink} />}

  <ArticleNav current={navCurrent} />

  <section class="w-full max-w-3xl p-2.5 sm:m-auto sm:mt-10 sm:p-0">
    <header class="mb-5 flex flex-col gap-1">
      <h1 class="text-4xl font-bold">{title}</h1>
      {
        (createdAt || modifiedAt) && (
          <div class="flex flex-col text-sm opacity-75">
            {createdAt && <span>{createdAt}</span>}
            {modifiedAt && <span>Last updated {modifiedAt}</span>}
          </div>
        )
      }

      {
        preamble && (
          <div class="mt-2 text-base opacity-75" set:html={preamble} />
        )
      }
    </header>

    <main class="article-content prose !prose-invert">
      <hr />
      <slot />
    </main>

    {comments && <Comments />}
  </section>

  <ArticleFooter />
</Layout>

<style is:global>
  @reference "../styles/global.css";

  body {
    /* TODO: find out why this happens on my desktop */
    overflow-x: hidden;
  }

  .article-content {
    @apply mb-12 max-w-none not-italic;
    @apply prose-headings:relative prose-headings:italic;

    & :is(h1, h2, h3, h4, h5, h6) {
      display: flex;
      gap: 0.5rem;

      & > a {
        background: linear-gradient(to bottom right, #f0f, #0ff);
        background-clip: text;
        color: transparent;
        text-decoration: none;
        font-style: normal;
        opacity: 0;
        transition: opacity 0.1s ease-out;

        &:hover {
          font-weight: bold;
        }
      }

      &:hover > a {
        opacity: 1;
      }
    }
  }

  .astro-code,
  .shiki {
    position: relative;
    background: linear-gradient(to bottom right, #f0f, #0ff);

    &::before {
      content: "";
      display: block;
      position: absolute;
      inset: 1px;
      background: #101416;
      border-radius: inherit;
    }

    & > code {
      display: block;
      background: linear-gradient(to bottom, #f0f, #0ff);
      background-clip: text;
      padding: 0;
      color: inherit;

      &::before {
        content: none;
        display: none;
      }
    }
  }

  .line {
    & [style*="#5CDAFC" i],
    & [style*="#7BF2FF" i],
    & [style*="#00ACCE" i],
    & [style*="#3EC6C4" i] {
      color: transparent !important;
    }

    /* TODO: how the fuck do I fix this properly??? */
    &:last-child:has(> :empty) {
      display: none;
    }
  }
</style>
